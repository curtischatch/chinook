Find the albums recorded by the artist Queen.
    Album.where(artist_id:Artist.find_by(name:"Queen").id)


Count how many tracks belong to the media type "Protected MPEG-4 video file".
    Track.where(media_type_id: MediaType.find_by(name:"Proteced MPEG-4 video file")).count

Find the genre with the name "Hip Hop/Rap".
    Genre.find_by(name: "Hip Hop/Rap")

Count how many tracks belong to the "Hip Hop/Rap" genre
    Track.where(genre_id: Genre.find_by(name: "Hip Hop/Rap")).count

Find the total amount of time required to listen to all the tracks in the database.
    Track.sum(:milliseconds)

Find the highest price of any track that has the media type "MPEG audio file".
    Track.where(media_type_id:MediaType.find_by("MPEG audio file").id).maximum(:unit_price)

Find the name of the most expensive track that has the media type "MPEG audio file".
    Track.find_by(unit_price: Track.where(media_type_id: MediaType.find_by(name: "Electronica/Dance").id).minimum(:unit_price))

Find the 2 oldest artists.
    Artist.order(created_at: :asc).limit(2)

Find the least expensive track that has the genre "Electronica/Dance".
    Track.find_by(unit_price: Track.where(genre_id: Genre.find_by(name: "MPEG audio file").id).maximum(:unit_price)).name

this one does not work as intended

Find all "MPEG autio file" tracks in the genre "Electronica/Dance".

    Track.where(genre_id: Genre.find_by(name: "Electronica/Dance").id).where(media_type_id: MediaType.find_by(name: "MPEG audio file").id)

STRETCH

Album.where("title ILIKE ?", "A%")
